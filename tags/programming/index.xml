<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on Gerald's Website</title><link>https://geraldwong.net/tags/programming/</link><description>Recent content in Programming on Gerald's Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 22 Apr 2023 14:44:00 +0800</lastBuildDate><atom:link href="https://geraldwong.net/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Going from Markdown to Asciidoc</title><link>https://geraldwong.net/blog/20210422_going_from_md_to_adoc/</link><pubDate>Sat, 22 Apr 2023 14:44:00 +0800</pubDate><guid>https://geraldwong.net/blog/20210422_going_from_md_to_adoc/</guid><description>&lt;p>Here I&amp;rsquo;ll pin down my thought process of changing my work&amp;rsquo;s documentations from Markdown to Asciidoc.
I have been switching endlessly back and forth between them and it&amp;rsquo;s getting really annoying because I just want to do my work at some point.
Hopefully after writing this, I will never look back until maybe 5 years later.&lt;/p></description></item><item><title>INDEX/MATCH tl;dr</title><link>https://geraldwong.net/blog/20230411_index_match_tldr/</link><pubDate>Mon, 10 Apr 2023 12:00:00 +0800</pubDate><guid>https://geraldwong.net/blog/20230411_index_match_tldr/</guid><description>&lt;p>I was playing with Excel recently and for the hundredth time got stumped by how to use the INDEX/MATCH combo.
For the hundredth time in the past years, I open the same damn website and the same damn explanation which took awhile because my brain actually needed to work to understand what&amp;rsquo;s going on.&lt;/p></description></item><item><title>My Raspberry PI Cookbook</title><link>https://geraldwong.net/blog/_rpi_cookbook/</link><pubDate>Sun, 12 Mar 2023 12:00:00 +0800</pubDate><guid>https://geraldwong.net/blog/_rpi_cookbook/</guid><description>&lt;p>I figured that I might as well save a Raspberry PI cookbook somewhere.&lt;/p></description></item><item><title>Byte Alignment Notes</title><link>https://geraldwong.net/blog/20211118_bytes_alignment_notes/</link><pubDate>Thu, 18 Nov 2021 12:00:00 +0800</pubDate><guid>https://geraldwong.net/blog/20211118_bytes_alignment_notes/</guid><description>&lt;p>When dealing with raw memory directly, there might come the need to align your memory to the nearest of some power of 2.&lt;/p></description></item><item><title>Dirty C/C++</title><link>https://geraldwong.net/blog/dirty_c/</link><pubDate>Fri, 24 Sep 2021 12:00:00 +0800</pubDate><guid>https://geraldwong.net/blog/dirty_c/</guid><description>&lt;p>Here is a collection of cool snippets of C/C++ code. Updated regularly. Used to show superiority and implode the minds of my students. Also to use in my own code, of course, whenever viable.&lt;/p></description></item><item><title>Circle to Finite Line Collision</title><link>https://geraldwong.net/blog/20210428_circle_line_collision/</link><pubDate>Sun, 04 Jul 2021 12:00:00 +0800</pubDate><guid>https://geraldwong.net/blog/20210428_circle_line_collision/</guid><description>&lt;p>Recently, I had to derive this particular collision detection algorithm for my bullet hell genre game. It&amp;rsquo;s an interesting algorithm that can be expanded to deal with the &amp;lsquo;moving circle vs static circle&amp;rsquo; and &amp;lsquo;moving circle vs moving circle&amp;rsquo; problems.&lt;/p></description></item><item><title>[C/C++] The 'Glue' Preprocessor Trick</title><link>https://geraldwong.net/blog/20210406_glue_c_preprocessor_trick/</link><pubDate>Tue, 06 Apr 2021 12:00:00 +0800</pubDate><guid>https://geraldwong.net/blog/20210406_glue_c_preprocessor_trick/</guid><description>&lt;p>Macro tricks are rare to find nowadays.
Sometimes, I would code and &lt;em>know&lt;/em> of a trick but had forgotten how to go about implementing it because they can look as arcane as Template Metaprogramming.
Hopefully, I can document some of my knowledge of these tricks in this blog.
Here, I will introduce what I call the &amp;lsquo;Glue&amp;rsquo; macro trick.&lt;/p></description></item><item><title>A small shortcoming of return-by-value</title><link>https://geraldwong.net/blog/20210324_shortcomings_of_return_by_value_c_style_constructors/</link><pubDate>Wed, 24 Mar 2021 12:00:00 +0800</pubDate><guid>https://geraldwong.net/blog/20210324_shortcomings_of_return_by_value_c_style_constructors/</guid><description>&lt;p>Recently, while coding on my personal C/C++ game engine project, I ran into a surprising shortcoming of functions that returns an object by value. This was when I was still trying to keep things consistant in my project and went for a functional-programming style.&lt;/p></description></item></channel></rss>